<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnPower.Values.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DQAACw0B7QfALAAABG5JREFUSEuFlWtMlXUcx5nCnE1dY4qbuBliTl5oq+CVa06LiM1i6rzkC5mTdwhB
        QDbf1Jh5wYxcctNk0kJyQgXirdxE0lgOJBHoglxOHAyOHTkHzuFc4Hm+fX//8zznoqz+22fneX6X7+/5
        /W8nClFR/0cc2UkOk69IHSkj75EUMltOkFmNBsnkAvFi3TpgyxZg925gzx5gxw5g0yYgNhb03yfZZDaN
        2Y3kBAG2bQOqq4Fbt4DeXmgjI9CsVugDA8Ddu0BTE3DwIBAfL4U6yctGfpCIF4ObWLgQOHoUaGsDLl4E
        jhyBdqkJHkDh738IlJQAVVVAayvQ2Ahs2CBFhHfCtEIPBj9h3jwliIYGoKAAOPUFtMpKaOfOYYrigr+j
        HToLaDU1QFERUFoa6CY52SzymqkZLv4ZCcx1eTmQmYnp2lq4vR747tyBXlwMtz4DlxS4fk0VkGfvvXtA
        YSFhIelqwQIp4CXPia4pvoYA8+cD2dnArl3wX7mCCQq4iX7jBvT8fLi0GUzy3ffdt2ruvXxWMTYb9P37
        gdxcYP16s4uvRdss0KSMS5cCaWnwczocTPSTf8jj48eBrCxM6poSnGaBqYwMWKdcKkYV+XsksMNSUswC
        QryIPx80REdD37cPTibIYj4hPWzbsWwZdHY2AU35fNeuwvdCAvrT38KgxQIfbeOG3di6JsVS4N0wAzzn
        a9XXy/z2nP0SLpm25csxs3cvxTXlc3/PKUpIAJYswZ+pqbC6XWrx5QN0sYf02qVAYM8bOHu7lfjg2ChG
        V61SIli0CNNbt1JcU125v6kLrFdSEqaZ01d2Sq2N+Hw7eQhDek4pIEdfGbQVK2D3uNQ0DLMTv9hlXfir
        b95MqzGucyrEFxfw2d5MxSOuj50u9zGeH/EZSIF680V79RUVZCMTnxwKBMXEqF9H0ho0c3vW//gDuvLz
        Aj6umfz6ElfC5p3CY+ZNnebhE5+BFDhjvnhWMtDnUYHuqoqIQCe5TOrJA8Nmoq1dCzs7kDzHiU/DfT4p
        UGgansyZg+H+PjVF40O8b0KB/4nngyLVtWDN5FYN+YakwEumYYL0njmtDtAY8eTw8ISCZycmGnbbqNoY
        A9M+9C1eHO6/IAUEixh00sKdY2GwbDtp2ZeeHp4Qydy5cLbcVB8jo/Xk5xiJjEkzC2SZxt9I3YcHVILs
        eWnbXXIMM6tXBxN1blvf9u1wdD8Iiv9q/QsNvCjlI424YcKnEANEOetIbQUvPA45pVLE7pqEo7MDzl/a
        MG4ZVN3JvpcxZBvD4cREPDLyDd4gfAoRuPCIHJ4SUpqbg3GHXAKBIdeHuq7VW2C0NDcjLy4OnUauQSVR
        uuEFhLeJCpJWT5IcnuRqXscdzZcw2HUflp5u/P7zbVwtL8PHGzcijzHdRo5BIwlqhoubvE7sRCW0k0Pk
        fVIocCsX8PcAOU/UaQ9RQSL0Il7CiCVnSTBZDtpDIpvgqbkWukgGeUbrGcNTvEg+IreJjehEBF3kD1JD
        Iv6DI4mK+hdnrSsyu//LgAAAAABJRU5ErkJggg==
</value>
  </data>
</root>